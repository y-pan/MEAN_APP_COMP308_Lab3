{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/array-contains.pipe.ts","./src/app/components/course/course.component.css","./src/app/components/course/course.component.html","./src/app/components/course/course.component.ts","./src/app/components/login/login.component.css","./src/app/components/login/login.component.html","./src/app/components/login/login.component.ts","./src/app/components/mycourses/mycourses.component.css","./src/app/components/mycourses/mycourses.component.html","./src/app/components/mycourses/mycourses.component.ts","./src/app/components/nav/nav.component.css","./src/app/components/nav/nav.component.html","./src/app/components/nav/nav.component.ts","./src/app/components/signup/signup.component.css","./src/app/components/signup/signup.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/user/user.component.css","./src/app/components/user/user.component.html","./src/app/components/user/user.component.ts","./src/app/services/config.service.ts","./src/app/services/data.service.ts","./src/app/services/message.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n<div style=\\\"text-align:center\\\">\\n  \\n    <app-nav></app-nav>\\n\\n    <app-login></app-login>\\n    \\n    <app-signup></app-signup>\\n    \\n    <app-user></app-user>\\n\\n    <app-mycourses></app-mycourses>\\n    <app-course></app-course>\\n\\n</div>\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'COMP308_Lab3';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { UserComponent } from './components/user/user.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { CourseComponent } from './components/course/course.component';\n\nimport { ConfigService} from './services/config.service';\nimport {DataService} from './services/data.service';\nimport {MessageService} from './services/message.service';\nimport { NavComponent } from './components/nav/nav.component';\nimport { MycoursesComponent } from './components/mycourses/mycourses.component';\nimport { ArrayContainsPipe } from './array-contains.pipe';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserComponent,\n    LoginComponent,\n    SignupComponent,\n    CourseComponent,\n    NavComponent,\n    MycoursesComponent,\n    ArrayContainsPipe\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    FormsModule, ReactiveFormsModule\n  ],\n  providers: [DataService, ConfigService, MessageService],\n  bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'arrayContains'\n})\n/** used for angular to check if a course's students (array or null) contains student_id, so that we can show/hide register button */\n/** course.students | arrayContains */\nexport class ArrayContainsPipe implements PipeTransform {\n  transform(array: any, element?: string): boolean {\n    // check if args is undefined\n    if(element === undefined) return false;\n    if(array === undefined || !array) return false;\n    if(array instanceof Array){\n      for(var i=0, len=array.length; i<len; i++){\n        if(array[i] == element){\n          return true;\n        }\n      }\n    }else{\n      return false;\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/array-contains.pipe.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/course/course.component.css\n// module id = ./src/app/components/course/course.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\" *ngIf=\\\"displayCourses\\\">\\n  <h3>All Courses</h3>\\n  <div class=\\\"err\\\" *ngIf=\\\"errorInCourse\\\" style=\\\"color:red;\\\">\\n      {{errorInCourse}}\\n    </div>\\n  <table class=\\\"table\\\">\\n    <thead class=\\\"thead-dark\\\">\\n      <tr>\\n          <th scope=\\\"col\\\">index</th >\\n          <th scope=\\\"col\\\">coce</th >\\n          <th scope=\\\"col\\\">name</th>\\n          <th scope=\\\"col\\\">section</th>\\n          <th scope=\\\"col\\\">semester</th>\\n          <th scope=\\\"col\\\">student registerd</th>\\n          <th scope=\\\"col\\\">Register</th>\\n\\n          <th hidden>_id</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let course of courses; let i=index\\\">\\n        <th scope=\\\"row\\\">{{i +1}}</th>\\n        <td>{{course.code}}</td>\\n        <td>{{course.name}}</td>\\n        <td>{{course.section}}</td>\\n        <td>{{course.semester}}</td>\\n        <td>{{course.students.length}}</td>\\n        <td>\\n          <!-- need global student info: if you are registerred, then you can see Drop button, otherwise you see Register button -->\\n          <button (click)=\\\"registerCourse(course)\\\" *ngIf=\\\"!(course.students | arrayContains:studentId); \\\">Register</button>\\n          <!-- <ng-template #registered>Registerred</ng-template> -->\\n        </td>\\n        <td hidden>{{course._id}}</td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/course/course.component.html\n// module id = ./src/app/components/course/course.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { MessageService } from '../../services/message.service';\nimport { ConfigService } from '../../services/config.service';\nimport { ArrayContainsPipe } from '../../array-contains.pipe';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css'],\n  // pipes:[ArrayContainsPipe]\n})\nexport class CourseComponent implements OnInit {\n  courses:Course[]\n  course_debug:string = \"course_debug\"\n  studentId:string;\n  displayCourses:boolean;\n  displayMyCourse:boolean;\n  isEnabled:boolean;\n  errorInCourse:string;\n\n  constructor(\n    private configService:ConfigService\n    , private dataService:DataService\n    , private messageService:MessageService) { \n\n    this.messageService.listen().subscribe((msg:any)=>{\n      switch(msg){\n        // case this.configService.MSG_USER_LOGGEDIN:\n        //   this.enable(true);\n        //   break;\n        // case this.configService.MSG_USER_LOGGEDOUT:\n        //   this.enable(false);\n        //   break;\n        case this.configService.MSG_SHOW_COURSES:\n          this.display(true);\n          break;\n        // case this.configService.MSG_HIDE_COURSES:\n        //   this.display(false);\n        //   break;\n        default:\n          this.display(false);\n          break;\n      }\n    });\n  }\n\n  ngOnInit() {\n    console.log(\"course ngOnInt()...\")\n    this.courses = [];\n    // this.mock_course();\n    this.getCourses(); /** get all courses */\n    \n    \n  }\n  \n  private enable(enabled:boolean){ /** enabled when logged in, disabled when logged out */\n    this.isEnabled = enabled;\n    if(!this.isEnabled){\n      this.display(false);\n    }\n  }\n\n  private display(toDisplay:boolean){\n    this.displayCourses = toDisplay;\n    this.displayMyCourse = toDisplay;\n    \n    // if(!this.isEnabled){return;}\n\n    if(toDisplay){\n      this.getCourses();\n      // this.getMyCourses();\n    }\n  }\n\n  private getCourses():void{ /** this is to get all courses from school, for all student to view */\n    let student = this.dataService.getStudent()\n    if(student){\n      this.studentId = student._id;\n      // console.log(\"get studentId!!!!!!!!!!!!!!: \" + this.studentId)\n    }else{\n      this.studentId = \"\";\n    }\n\n    this.dataService.getCourses().subscribe((dataJson:Response) =>{\n      this.courses = [];\n      // console.log(\"course -> getCourse()\")\n      for (let i=0; i< dataJson[\"data\"].length; i++){\n        this.courses.push(dataJson[\"data\"][i]);\n      }\n    });\n  }\n\n  registerCourse(course:any){\n    if(confirm(\"Are you sure to register course: \" +course.code + \" - \" + course.name + \" (section \" + course.section + \") ?\")) {\n      let student = this.dataService.getStudent();\n      // console.log(\"student=\" + student._id + \" | course=\" + courseId);\n      this.dataService.registerCourse(student._id, course._id).subscribe(data =>{\n        this.errorInCourse = data[\"err\"];\n        if(!this.errorInCourse){\n          // this.display(true);\n          this.messageService.filter(this.configService.MSG_SHOW_COURSES);\n        }\n      })\n    }\n  }\n  private getMyCourses(){\n    // todo\n    // console.log(\"TO IMPLEMENT course.component / getMyCourses()\")\n    this.messageService.filter(this.configService.MSG_SHOW_MYCOURSES); /** inform mycourses component to do job */\n  }\n\n  private mock_course():void{\n    this.courses.push(\n      {\n      \"students\": [\n        \"5abea387729b162350860c15\",\n        \"5abea794c85f2b199c72a785\",\n        \"5abf131e6bcff834d450c951\"\n    ],\n    \"_id\": \"5abf03309004920700b40ab6\",\n    \"code\": \"COMP200\",\n    \"name\": \"Programing 2\",\n    \"section\": \"1\",\n    \"semester\": \"2\",\n    });\n\n    this.courses.push({\n      \"students\": [],\n      \"_id\": \"5abf033c9004920700b40ab7\",\n      \"code\": \"COMP300\",\n      \"name\": \"Programing 3\",\n      \"section\": \"1\",\n      \"semester\": \"3\"\n  })\n  }\n}\n\ninterface Course{\n  _id?:string;\n  code?:string;\n  name?:string;\n  section?:string;\n  semester?:string; \n  students?:string[]\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/course/course.component.ts","module.exports = \"body {\\r\\n  padding-top: 40px;\\r\\n  padding-bottom: 40px;\\r\\n  background-color: #eee;\\r\\n}\\r\\n\\r\\n.form-signin {\\r\\n  max-width: 330px;\\r\\n  padding: 15px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.form-signin .form-signin-heading,\\r\\n.form-signin .checkbox {\\r\\n  margin-bottom: 10px;\\r\\n}\\r\\n\\r\\n.form-signin .checkbox {\\r\\n  font-weight: normal;\\r\\n}\\r\\n\\r\\n.form-signin .form-control {\\r\\n  position: relative;\\r\\n  height: auto;\\r\\n  -webkit-box-sizing: border-box;\\r\\n          box-sizing: border-box;\\r\\n  padding: 10px;\\r\\n  font-size: 16px;\\r\\n}\\r\\n\\r\\n.form-signin .form-control:focus {\\r\\n  z-index: 2;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"email\\\"] {\\r\\n  margin-bottom: -1px;\\r\\n  border-bottom-right-radius: 0;\\r\\n  border-bottom-left-radius: 0;\\r\\n}\\r\\n\\r\\n.form-signin input[type=\\\"password\\\"] {\\r\\n  margin-bottom: 10px;\\r\\n  border-top-left-radius: 0;\\r\\n  border-top-right-radius: 0;\\r\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.css\n// module id = ./src/app/components/login/login.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\" *ngIf=\\\"toDisplayLogin\\\">\\n\\n  <form class=\\\"form-signin\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <h2 class=\\\"form-signin-heading\\\">Student Login</h2>\\n    <label for=\\\"studentnumber\\\" class=\\\"sr-only\\\">Student Number</label>\\n    <input type=\\\"text\\\" id=\\\"studentnumber\\\" name=\\\"credential.studentnumber\\\" [(ngModel)]=\\\"credential.studentnumber\\\" class=\\\"form-control\\\" placeholder=\\\"Student Number\\\" required autofocus>\\n    <label for=\\\"inputPassword\\\" class=\\\"sr-only\\\">Password</label>\\n    <input type=\\\"password\\\" id=\\\"inputPassword\\\" name=\\\"credential.password\\\" [(ngModel)]=\\\"credential.password\\\"  class=\\\"form-control\\\" placeholder=\\\"Password\\\" required>\\n    <!-- <div class=\\\"checkbox\\\">\\n      <label>\\n        <input type=\\\"checkbox\\\" value=\\\"remember-me\\\"> Remember me\\n      </label>\\n    </div> -->\\n    <button class=\\\"btn btn-lg btn-primary btn-block\\\" type=\\\"submit\\\">Login</button>\\n    <div class=\\\"err\\\" style=\\\"color:red;\\\">\\n        {{loginErr}}\\n    </div>\\n  </form>\\n\\n</div> <!-- /container -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/login/login.component.html\n// module id = ./src/app/components/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { MessageService } from '../../services/message.service';\nimport { ConfigService } from '../../services/config.service';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  toDisplayLogin:boolean;\n  credential:Credential;\n  loginErr:string;\n  constructor(\n    private configService:ConfigService\n    , private dataService:DataService\n    , private messageService:MessageService) {\n    \n    this.messageService.listen().subscribe((msg:any)=>{\n      switch(msg){\n        // case this.configService.MSG_USER_LOGGEDOUT:\n        //   this.display(true);break;\n        // case this.configService.MSG_USER_LOGGEDIN:\n        //   this.display(false);break;\n        case this.configService.MSG_SHOW_LOGIN:\n          this.display(true); break;\n        // case this.configService.MSG_SHOW_SIGNUP:\n        //   this.display(false);break;\n        default:\n          this.display(false); break;\n      }\n\n    })\n   }\n\n  ngOnInit() {\n    // console.log(\"ng login compoment/ngOnInit...\")\n    // this.dataService.login(\"300823010\", \"Aa!123456\").subscribe(data => {\n    //   console.log(\"looks like login works...\")\n    //   console.log(data['data']['_id'])\n    // });\n    this.display(true);\n    this.credential = {\n      studentnumber:\"\"\n      ,password:\"\"\n    }\n    this.loginErr = \"\";\n\n    this.mock_cred();\n  }\n  display(toDisplay:boolean){\n    this.toDisplayLogin = toDisplay;\n  }\n\n  mock_cred(){\n    this.credential = {\n      studentnumber:\"300823057\"\n      , password:\"Aa!123456\"\n    }\n  }\n  onSubmit(){\n    // console.log(this.credential);\n    this.dataService.login(this.credential.studentnumber, this.credential.password).subscribe(data =>{\n      // console.log(\"attempted login...\")\n      // console.log(data);\n      this.loginErr = data[\"err\"];\n      this.dataService.setStudent(data[\"data\"]);\n      \n      if(data[\"data\"]){\n        this.messageService.filter(this.configService.MSG_USER_LOGGEDIN);\n        this.messageService.filter(this.configService.MSG_SHOW_PROFILE);\n      }\n    })\n  }\n}\n\n\ninterface Credential{\n  studentnumber:string;\n  password:string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/login/login.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/mycourses/mycourses.component.css\n// module id = ./src/app/components/mycourses/mycourses.component.css\n// module chunks = main","module.exports = \"\\n<div class=\\\"container\\\" *ngIf=\\\"toDisplayMyCourses\\\">\\n  <h3>My Courses</h3>\\n  <div class=\\\"err\\\" *ngIf=\\\"errMyCourses\\\" style=\\\"color:red;\\\">\\n      {{errMyCourses}}\\n    </div>\\n    <table class=\\\"table\\\" *ngIf=\\\"myCourses.length > 0\\\">\\n      <thead class=\\\"thead-dark\\\">\\n        <tr>\\n            <th scope=\\\"col\\\">index</th >\\n            <th scope=\\\"col\\\">coce</th >\\n            <th scope=\\\"col\\\">name</th>\\n            <th scope=\\\"col\\\">section</th>\\n            <th scope=\\\"col\\\">semester</th>\\n            <th scope=\\\"col\\\">student registerd</th>\\n            <th scope=\\\"col\\\">Register/Drop</th>\\n            <th hidden>_id</th>\\n        </tr>\\n      </thead>\\n      <tbody>\\n\\n        <tr *ngFor=\\\"let course of myCourses; let i=index\\\">\\n          <th scope=\\\"row\\\">{{i +1}}</th>\\n          <td>{{course.code}}</td>\\n          <td>{{course.name}}</td>\\n          <td>{{course.section}}</td>\\n          <td>{{course.semester}}</td>\\n          <td>{{course.students.length}}</td>\\n          <td>\\n            <!-- need global student info: if you are registerred, then you can see Drop button, otherwise you see Register button -->\\n            <!-- <button >Register</button> -->\\n            <button (click)=\\\"drop(course)\\\" >Drop</button>\\n          </td>\\n          <td hidden>{{course._id}}</td>\\n        </tr>\\n      </tbody>\\n    </table>\\n    <div *ngIf=\\\"myCourses.length == 0\\\">\\n      No courses registerred!\\n    </div>\\n   \\n  </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/mycourses/mycourses.component.html\n// module id = ./src/app/components/mycourses/mycourses.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../../services/message.service';\nimport { ConfigService } from '../../services/config.service';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-mycourses',\n  templateUrl: './mycourses.component.html',\n  styleUrls: ['./mycourses.component.css']\n})\nexport class MycoursesComponent implements OnInit {\n\n  toDisplayMyCourses: boolean;\n  myCourses: any;\n  errMyCourses: string;\n\n  constructor(\n    private messageService: MessageService\n    , private configService: ConfigService\n    , private dataService: DataService\n  ) {\n    this.messageService.listen().subscribe((msg: any) => {\n      switch (msg) {\n        case this.configService.MSG_SHOW_MYCOURSES:\n          this.display(true);\n          break;\n        default:\n          this.display(false);\n          break;\n      }\n    })\n  }\n\n  ngOnInit() {\n    this.errMyCourses = \"\";\n    this.myCourses = [];\n  }\n  display(toDisplay: boolean) {\n    this.toDisplayMyCourses = toDisplay;\n    this.myCourses = [];\n    if (this.toDisplayMyCourses) {\n      let student = this.dataService.getStudent();\n      if (student) {\n        this.dataService.getMyCourses(student._id).subscribe(data => {\n          this.errMyCourses = data[\"err\"];\n          this.myCourses = data[\"data\"];\n        });\n      } else {\n        this.errMyCourses = \"No student\";\n        this.myCourses = null;\n      }\n    }\n  }\n\n  drop(course: any) {\n    // console.log(\"to do drop course: \" + courseId)\n    if (confirm(\"Are you sure to drop course: \" + course.code + \" - \" + course.name + \" (section \" + course.section + \") ?\")) {\n      let student = this.dataService.getStudent();\n      this.dataService.dropCourse(student._id, course._id).subscribe(data => {\n        console.log(data)\n        /** response is either: { \"data\": \"OK\"} or  { \"err\": \"error in dropping course\"}*/\n        this.errMyCourses = data[\"err\"];\n        if (!this.errMyCourses) {\n          this.display(true);\n        }\n      });\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/mycourses/mycourses.component.ts","module.exports = \"body {\\r\\n    padding-bottom: 20px;\\r\\n  }\\r\\n  \\r\\n  .navbar {\\r\\n    margin-bottom: 20px;\\r\\n  }\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/nav/nav.component.css\n// module id = ./src/app/components/nav/nav.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-dark\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Student Register System</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExample03\\\" aria-controls=\\\"navbarsExample03\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExample03\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item\\\" [ngClass]=\\\"{active :displayNav == 0}\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"isLoggedIn\\\" (click)=\\\"showHome()\\\">Home</a>\\n        <!-- <span class=\\\"sr-only\\\">(current)</span> -->\\n      </li>  \\n      <li class=\\\"nav-item\\\" *ngIf=\\\"!isLoggedIn\\\" [ngClass]=\\\"{active :displayNav == -1}\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"showLogin()\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [ngClass]=\\\"{active :displayNav == -2}\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"!isLoggedIn\\\" (click)=\\\"showSignUp()\\\">SignUp</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [ngClass]=\\\"{active :displayNav == 1}\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"isLoggedIn\\\" (click)=\\\"getMyCourses()\\\">My Courses</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" [ngClass]=\\\"{active :displayNav == 2}\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"isLoggedIn\\\" (click)=\\\"getAllCourses()\\\">All Courses</a>\\n      </li>\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" *ngIf=\\\"isLoggedIn\\\" (click)=\\\"logout()\\\">Logout</a>\\n      </li> -->\\n      <!-- <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n      </li> -->\\n      <!-- <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"http://example.com\\\" id=\\\"dropdown03\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Dropdown</a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown03\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n        </div>\\n      </li> -->\\n    </ul>\\n    <input type=\\\"button\\\" class=\\\"btn btn-danger btn-sm\\\" *ngIf=\\\"isLoggedIn\\\" (click)=\\\"logout()\\\" value=\\\"Logout\\\"/>\\n    <!-- <form class=\\\"form-inline my-2 my-md-0\\\">\\n        \\n      <input class=\\\"form-control\\\" type=\\\"button\\\" value=\\\"Logout\\\">\\n    </form> -->\\n  </div>\\n</nav>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/nav/nav.component.html\n// module id = ./src/app/components/nav/nav.component.html\n// module chunks = main","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { MessageService } from '../../services/message.service';\nimport { ConfigService } from '../../services/config.service';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  isLoggedIn:boolean;\n  myCourses:any;\n  allCourses:any;\n  err:string;\n  displayNav:number;\n  @Output() onFilter:EventEmitter<any> = new EventEmitter(); /** all for messaging to tell components to react upon messages */\n\n  constructor(\n    private configService:ConfigService\n    , private messageService:MessageService\n    , private dataService:DataService\n  ) { \n    \n      this.messageService.listen().subscribe((msg:any)=>{\n        switch(msg){\n          case this.configService.MSG_USER_LOGGEDOUT:\n            this.doAfterLoggedOut();break;\n          case this.configService.MSG_USER_LOGGEDIN:\n            this.doAfterLoggedIn();break;\n          case this.configService.MSG_ON_NAV_HOME:\n            this.displayNav = 0;\n            break;\n          case this.configService.MSG_ON_NAV_LOGIN:\n            this.displayNav = -1;\n            break;\n          case this.configService.MSG_ON_NAV_SIGNUP:\n            this.displayNav = -2;\n            break;\n          case this.configService.MSG_ON_NAV_MYCOURSES:\n            this.displayNav = 1;\n            break;\n          case this.configService.MSG_ON_NAV_ALLCOURSES:\n            this.displayNav = 2;\n            break;  \n        }\n      })\n    \n  }\n\n  \n  ngOnInit() {\n    this.err = \"\";\n    this.checkIfLogin();\n    this.displayNav = -1;\n  }\n  \n  private checkIfLogin(){\n    /** here might need to check with server ??? */\n    this.logout();// log use out\n    // this.login();  // log user in\n    \n  }\n\n\n  private login(){/** This method logs user in */\n    this.messageService.filter(this.configService.MSG_USER_LOGGEDIN);\n    this.isLoggedIn = true;\n  }\n\n  private logout(){/** This method logs user out */\n    if(confirm(\"Are you sure to logout?\")){\n      this.messageService.filter(this.configService.MSG_USER_LOGGEDOUT);\n      this.isLoggedIn = false;\n      this.dataService.setStudent(null);\n  \n      this.messageService.filter(this.configService.MSG_SHOW_LOGIN);\n      /** also need to clear local session ??? */\n    }\n    \n  }\n  doAfterLoggedIn(){\n    this.isLoggedIn = true;\n    this.displayNav = 0;\n  } \n  doAfterLoggedOut(){\n    this.isLoggedIn = false;\n    // this.messageService.filter(this.configService.MSG_ON_NAV_LOGIN);\n    this.displayNav = -1;\n  }\n  showSignUp(){\n    console.log(\"show showSignUp\")\n    this.messageService.filter(this.configService.MSG_SHOW_SIGNUP);\n    // this.messageService.filter(this.configService.MSG_ON_NAV_SIGNUP);\n    this.displayNav = -2;\n  }\n  showLogin(){\n    console.log(\"show showLogin\")\n    this.messageService.filter(this.configService.MSG_SHOW_LOGIN);\n    // this.messageService.filter(this.configService.MSG_ON_NAV_LOGIN);\n    this.displayNav = -1;\n  }\n\n  getMyCourses(){\n    this.messageService.filter(this.configService.MSG_SHOW_MYCOURSES);  \n    // this.messageService.filter(this.configService.MSG_ON_NAV_MYCOURSES);\n    this.displayNav = 1;\n  }\n\n  getAllCourses(){\n    this.messageService.filter(this.configService.MSG_SHOW_COURSES);\n    // this.messageService.filter(this.configService.MSG_ON_NAV_ALLCOURSES);\n    this.displayNav = 2;\n  }\n  showHome(){\n    this.messageService.filter(this.configService.MSG_SHOW_PROFILE);\n    // this.messageService.filter(this.configService.MSG_ON_NAV_HOME);\n    this.displayNav = 0;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/nav/nav.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/signup/signup.component.css\n// module id = ./src/app/components/signup/signup.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"toDisplaySignUp\\\">\\n    <h3>Student SignUp</h3>\\n    <div class=\\\"err\\\" style=\\\"color:red;\\\" *ngIf=\\\"signUpErrs.length > 0\\\">\\n        Failed to submit due to {{signUpErrs.length}} error(s) in form:\\n        <ul>\\n            <li *ngFor=\\\"let err of signUpErrs; let i = index\\\">\\n                {{i+1}} - {{err}}\\n            </li>\\n        </ul>\\n    </div>\\n    <form method=\\\"POST\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"studentnumberFr\\\" class=\\\"col-2 col-form-label\\\">Student Number:</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"studentnumberFr\\\" [(ngModel)]=\\\"student.studentnumber\\\" name=\\\"student.studentnumber\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n                    placeholder=\\\"Enter your Student Number\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"firstname\\\" class=\\\"col-2 col-form-label\\\">First Name:</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"firstname\\\" [(ngModel)]=\\\"student.firstname\\\" name=\\\"student.firstname\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your First Name\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n\\n\\n            <label for=\\\"lastnameFr\\\" class=\\\"col-2 col-form-label\\\">Last Name:</label>\\n\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"lastnameFr\\\" [(ngModel)]=\\\"student.lastname\\\" name=\\\"student.lastname\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your Last Name\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"addresssFr\\\" class=\\\"col-2 col-form-label\\\">Addresss:</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"addresssFr\\\" [(ngModel)]=\\\"student.address\\\" name=\\\"student.address\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your addresss\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"cityFr\\\" class=\\\"col-2 col-form-label\\\">City</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"cityFr\\\" [(ngModel)]=\\\"student.city\\\" name=\\\"student.city\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your city\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"phoneFr\\\" class=\\\"col-2 col-form-label\\\">Phone:</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"phoneFr\\\" [(ngModel)]=\\\"student.phone\\\" name=\\\"student.phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your phone\\\">\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"emailFr\\\" class=\\\"col-2 col-form-label\\\">Email:</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"emailFr\\\" [(ngModel)]=\\\"student.email\\\" name=\\\"student.email\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your Email Address\\\">\\n            </div>\\n\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"programFr\\\" class=\\\"col-2 col-form-label\\\">Program</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"programFr\\\" [(ngModel)]=\\\"student.program\\\" name=\\\"student.program\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your Favorite Program\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n\\n            <label for=\\\"passwordFr\\\" class=\\\"col-2 col-form-label\\\">Password:</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"passwordFr\\\" [(ngModel)]=\\\"student.password\\\" name=\\\"student.password\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your Password\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group row\\\">\\n            <label for=\\\"passwordAgainFr\\\" class=\\\"col-2 col-form-label\\\">Confirm Password:</label>\\n            <div class=\\\"col-10\\\">\\n                <input id=\\\"passwordAgainFr\\\" (input)=\\\"match2Passwords()\\\" [(ngModel)]=\\\"student.passwordAgain\\\" name=\\\"student.passwordAgain\\\"\\n                    type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Enter your Password Again\\\">\\n            </div>\\n        </div>\\n        <input id=\\\"btnSignUp\\\" type=\\\"submit\\\" [disabled]=\\\"isSubmitDisabled\\\" value=\\\"Sign Up\\\" class=\\\"btn btn-primary\\\" />\\n\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/signup/signup.component.html\n// module id = ./src/app/components/signup/signup.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { MessageService } from '../../services/message.service';\nimport { ConfigService } from '../../services/config.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  // rForm: FormGroup;\n  toDisplaySignUp:boolean;\n  student:Student;\n  signUpErrs:any;\n\n  isSubmitDisabled:boolean; /** to disable submit button when 2 passwords don't match */\n\n  constructor(\n    private dataService:DataService\n    , private fb:FormBuilder\n    , private messageService: MessageService\n    , private configService: ConfigService\n  ) {\n    // this.rForm = fb.group({\n    //   'studentnumber':[null, Validators.required],\n    //   'password':[null, Validators.compose([Validators.required, Validators.minLength(6), Validators.maxLength(18)])],\n    //   'firstname':[null, Validators.required],\n    //   'lastname':[null, Validators.required],\n    //   'email':[null, Validators.compose([Validators.required, Validators.email])],\n    //   'address':[null],\n    //   'city':[null],\n    //   'phone':[null],\n    // })\n\n    this.messageService.listen().subscribe((msg:any) =>{\n      switch(msg){\n        case this.configService.MSG_SHOW_SIGNUP:\n          this.display(true);break;\n        default:\n          this.display(false);break;\n      }\n    });\n    \n   }\n\n  ngOnInit() {\n    // this.display(false);\n    this.isSubmitDisabled = true;\n    this.signUpErrs = [];\n    this.student = {\n      studentnumber:\"\",\n      password:\"\",\n      passwordAgain:\"\",\n      firstname:\"\",\n      lastname:\"\",\n      email:\"\",\n\n      address:\"\",\n      city:\"\",\n      phone:\"\",\n      program:\"\"\n    }\n\n    this.mock_user();\n  }\n  display(toDisplay:boolean){\n    this.toDisplaySignUp = toDisplay;\n  }\n\n  \n  match2Passwords() {\n    if(this.student.password == \"\" ||this.student.passwordAgain == \"\" ||  this.student.password !=  this.student.passwordAgain){\n      this.isSubmitDisabled = true;\n    }else{     \n      this.isSubmitDisabled = false;\n    }\n  }\n\n  mock_user(){\n    this.student = {\n      studentnumber:\"400000001\",\n      password:\"Aa!123456\",\n      passwordAgain:\"Aa!123456\",\n      firstname:\"firstname41\",\n      lastname:\"lastname41\",\n      email:\"email41@gmail.com\",\n      \n      address:\"123 main ave\",\n      city:\"Toronto\",\n      phone:\"6470000001\",\n      program:\"Software Engineering\"\n    }\n  }\n  onSubmit(){\n    if(this.student.password != this.student.passwordAgain){\n      this.signUpErrs = [\"Passwords didn't match!\"];\n      return;\n    }\n    this.dataService.signup(this.student).subscribe(data => {\n      this.signUpErrs = [];\n      console.log(\"err...\")\n      console.log(data[\"err\"])\n      console.log(\"data...\")\n      console.log(data[\"data\"])\n\n      if(data[\"err\"]){\n        let dbErr = data[\"err\"];\n        if(dbErr[\"errmsg\"]){\n          this.signUpErrs.push(dbErr[\"errmsg\"]);\n        }else{\n          if(dbErr instanceof Object){\n\n          }else{\n            this.signUpErrs.push(dbErr)\n          }\n        }\n\n        let errors = data[\"err\"][\"errors\"]; /** validation errors */\n        for(var prop in errors){\n          if(errors.hasOwnProperty(prop)){\n            this.signUpErrs.push(errors[prop][\"message\"]);\n          }\n        }\n      }else{\n        // console.log(\"data...\")\n        // console.log(data[\"data\"]);\n        if(!data[\"data\"]){\n          this.signUpErrs.push('Unknow error occurred!')\n        }else{\n          this.dataService.setStudent(data[\"data\"]);\n          this.messageService.filter(this.configService.MSG_USER_LOGGEDIN);\n          this.messageService.filter(this.configService.MSG_SHOW_PROFILE); /** PROFILE is Home */\n        }\n        \n      }\n      \n    })\n\n  }\n}\n\ninterface Student{\n  studentnumber:string;\n  password:string;\n  passwordAgain:string;\n  firstname:string;\n  lastname:string;\n  email:string;\n  \n  address:string;\n  city:string;\n  phone:string;\n  program:string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/signup/signup.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/user.component.css\n// module id = ./src/app/components/user/user.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\" *ngIf=\\\"toDisplayProfile\\\">\\n    <h3>Student Profile</h3>\\n    <table class=\\\"table\\\">\\n        <input type=\\\"text\\\" hidden value=\\\"{{user._id}}\\\">\\n        <tbody>\\n            <tr>\\n                <th scope=\\\"row\\\">Student Number</th>\\n                <td>{{user.studentnumber}}</td>\\n            </tr>\\n            <tr>\\n                <th scope=\\\"row\\\">First Name</th>\\n                <td>{{user.firstname}}</td>\\n            </tr>\\n            <tr>\\n                <th scope=\\\"row\\\">Last Name</th>\\n                <td>{{user.lastname}}</td>\\n            </tr>\\n            <tr>\\n                <th scope=\\\"row\\\">Email</th>\\n                <td>{{user.email}}</td>\\n            </tr>\\n            <tr>\\n                <th scope=\\\"row\\\">Address</th>\\n                <td>{{user.address}}</td>\\n            </tr>\\n            <tr>\\n                <th scope=\\\"row\\\">City</th>\\n                <td>{{user.city}}</td>\\n            </tr>\\n            <tr>\\n                <th scope=\\\"row\\\">Phone</th>\\n                <td>{{user.phone}}</td>\\n            </tr>     \\n            <tr>\\n                <th scope=\\\"row\\\">Program</th>\\n                <td>{{user.program}}</td>\\n            </tr>\\n            <!-- <tr>\\n                <th scope=\\\"row\\\">My Courses:</th>\\n                <td>mycourses...</td>\\n            </tr> -->\\n        </tbody>\\n\\n    </table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/user/user.component.html\n// module id = ./src/app/components/user/user.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../services/data.service';\nimport { MessageService } from '../../services/message.service';\nimport { ConfigService } from '../../services/config.service';\n\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent implements OnInit {\n\n  user:any;\n  toDisplayProfile:boolean;\n  text:string = \"mytext\"\n  // myCourses:\n  constructor(\n    private configService:ConfigService\n    , private messageService:MessageService\n    , private dataService:DataService\n  ) { \n\n    this.messageService.listen().subscribe((msg:any) =>{\n      switch(msg){\n        case this.configService.MSG_SHOW_PROFILE:\n          this.display(true);break;\n        default:\n          this.display(false);break;\n      }\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  display(toDisplay:boolean){\n    this.toDisplayProfile = toDisplay;\n    if(this.toDisplayProfile){\n      // this.mock_user();\n      this.user = this.dataService.getStudent();\n    }\n  }\n\n  mock_user(){\n    this.user = {}\n    this.user.studentnumber = \"300823005\"\n    this.user.password = \"Aa!123456\"\n    this.user.firstname = \"Firstname5\"\n    this.user.lastname = \"Lastname5\"\n    this.user.address = \"124 Main Ave\"\n    this.user.city = \"Markham\"\n    this.user.phone = \"6471112225\"\n    this.user.email = \"email5@gmail.com\"\n    this.user.program = \"Software Technology\"\n  }\n\n}\n\n// interface User{\n//   studentnumber?:string;\n//   password?:string;\n//   firstname?:string;\n//   lastname?:string;\n//   address?:string;\n//   city?:string;\n//   phone?:string;\n//   email?:string;\n//   program?:string;\n// }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/user/user.component.ts","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ConfigService {\n\n\n  MSG_ON_NAV_HOME: any = \"onNavHome\";\n  MSG_ON_NAV_LOGIN: any = \"onNavLogin\";\n  MSG_ON_NAV_SIGNUP: any = \"onNavSignUp\";\n  MSG_ON_NAV_MYCOURSES: any = \"onNavMyCourses\";\n  MSG_ON_NAV_ALLCOURSES: any = \"onNavAllCourses\";\n  \n  MSG_SHOW_MYCOURSES: string = \"showMyCourses\"; /** show user's couress */\n  MSG_SHOW_PROFILE: string = \"showUserProfile\"; /** show user profile like name, email,... */\n  MSG_SHOW_LOGIN:string = \"showLoginForm\";\n  MSG_SHOW_SIGNUP:string = \"showSignUpForm\";\n  \n  MSG_USER_LOGGEDIN:string = \"loggedIn\";\n  MSG_USER_LOGGEDOUT:string = \"loggedOut\";\n  MSG_HIDE_COURSES: string = \"hideAllCourses\";\n  MSG_SHOW_COURSES: string = \"showAllCourses\"; /** all courses for everyone */\n\n  constructor() { }\n\n  // public methods for caller\n  getCourses(){}\n\n  // private helper mothers\n  private getApi(){\n    return \"\";\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/config.service.ts","import { Injectable } from '@angular/core';\nimport { Http, RequestOptions, Headers, Response } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\nimport {ConfigService} from './config.service'\n\n\n@Injectable()\nexport class DataService {\n\n  registerCourse(studentId:string, courseId:string):any {\n    let url = \"http://localhost:8080/api/course/register\";\n    let headers:any = { headers: new Headers({ 'Content-Type': 'application/json' })};\n\n    let body = {\t\n      \"course_id\":courseId,\n      \"student_id\":studentId}\n      console.log(\"in DataService: body=\" )\n      console.log(body);\n    return this.http.post(url, JSON.stringify(body), headers).map((res:Response) => res.json());\n    /** response is either: { \"data\": \"OK\"} or  { \"err\": \"error in dropping course\"}*/\n  }\n  dropCourse(studentId: string, courseId: string): any {\n    let url:string = \"http://localhost:8080/api/course/drop\";\n    let body = {\n      \"course_id\":courseId,\n      \"student_id\":studentId\n    }\n    let headers:any = { headers: new Headers({ 'Content-Type': 'application/json' })};\n    return this.http.post(url, JSON.stringify(body), headers).map((res:Response) => res.json());\n    /** response is either: { \"data\": \"OK\"} or  { \"err\": \"error in dropping course\"}*/\n  }\n  private student:Student;\n  setStudent(student: any): any {\n    this.student = student;\n  }\n  getStudent():any{\n    return this.student;\n  }\n  constructor(public http:Http, private configService:ConfigService) {\n    console.log('Data service is connected ... ');\n    this.getCourses();\n   }\n\n  getCourses(){\n    /** get all courses */\n    let url:string = \"http://localhost:8080/api/course/list\";\n    return this.http.get(url).map((res:Response) => res.json());\n    // return this.http.get(url).map((res:Response) => {return res.json();});    // \n  }\n\n  getMyCourses(_id:string){\n    /** get my registered courses */\n    let url:string = \"http://localhost:8080/api/course/mylist/\" + _id; /** _id is default _id in mongodb, not student number */\n    return this.http.get(url).map((res:Response) => res.json());\n  }\n\n  login(studentnumber:string, password:string){\n    console.log(\"ng login: \" + studentnumber + \" | \" + password);\n    let url:string = \"http://localhost:8080/api/student/login\";\n    let body = {\"studentnumber\": studentnumber, \"password\":password};\n    return this.http.post(\n      url,\n      JSON.stringify(body)\n      ,{ headers: new Headers({ 'Content-Type': 'application/json' }) }\n    ).map((res:Response) => res.json());\n  }\n\n  signup(student){\n    let url = \"http://localhost:8080/api/student/signup\";\n    return this.http.post(\n      url,\n      JSON.stringify(student)\n      ,{ headers: new Headers({ 'Content-Type': 'application/json' }) }\n    ).map((res:Response) => res.json());\n  }\n}\n\ninterface Student{\n  _id:string,\n  courses: any,\n  studentnumber: string,\n  /* password: string,*/\n  firstname: string,\n  lastname: string,\n  addresss: string,\n  city: string,\n  phone: string,\n  email: string,\n  program: string\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/data.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class MessageService {\n  private listeners = new Subject<any>();\n\n  constructor() { }\n  \n  listen(): Observable<any>{\n    return this.listeners.asObservable();\n  }\n  filter(filterBy:string){\n    this.listeners.next(filterBy);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/services/message.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}